
<![MJ] DONE!>
stats(stat) ::= <<
	<if(stat)><stat; separator="\n"><endif>
>>



<!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
CLASS!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!>

<![MJ] DONE!>
class(name,stat) ::= <<
public class <name> {
   <stats(stat)>
}
>>



<!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
DECLARATION!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!>

<!
	ARRAYS WILL BE THE LAST ONES
	ARRAY '<' type ',' NUMBER'>' var
	arrayDeclaration(type, name, size) ::= <<
		
	>>
!>

<![MJ] DONE!>
varDeclaration(type, var) ::= <<
<type> <var> ;
>>



<!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
ASSIGNMENT!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!>

<![MJ] DONE!>
varAssignment(type, var, stat) ::= <<
<type> <var> = <stat>;	

>>



<!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
FUNCTION!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!>

<![MJ] DONE!>
main(stat)::= <<
public static void main(String[] args) {
   <stats(stat)>
}
>>


<![MJ] REVIEW (LOWER PRIORITY) -> args!>
function(name, return, arg) ::= <<
public static <return> <name> ( <args(arg)> ) {
   <stats(stat)>
}
>>

<![MJ] REVIEW (LOWER PRIORITY) -> problem with separator, if more than 1 arg, needs a comma, and i don't know how to implement it !>
args(arg) ::= <<
	<if(arg)>< <arg> separator=" "><endif>
>>



<!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
CONTROL FLOW !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!>

compareOperators ::= [ 
	"==":"==", 
	"!=":"!=", 
	"<'":"<'", 
	"<=":"<=", 
	">":">", 
	">=":">=", 
	default:"null" 
]

<![IJ] NOT DONE YET...!>

forLoop(firstAssig, lOp, finalAssig, stat) ::= <<
    for( <if(firstAssig)> firstAssig <endif> ; lOp ; finalAssig ) { <stats(stat)> }
>>

whileLoop(lo, stat) ::= <<
	<if(stat)>		while(lo){<stats(stat)>} 	<endif>
	<if(!stat)>		while(lo);				 	<endif>	           
>>

whenCase(var, valueList, statList) ::= <<
    switch(var){
        <statList: { y | <valueList: { x | case <x> : <if(<y>)> <stats(<y>)> break; <endif> } > } >
		default: break;
    }
>>
 			
<![IJ] NOT DONE!>
condition(logicalOperationList, statList) ::= << 
	<statList: 
		{ y | <logicalOperationList: { x | if(<x>){<stats(<y>)>} }; separator="\nelse " >
			  <if(y)> {<stats(<y>)>} <endif> <! last else !>
		}
	> 

>>

<!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
LOGICAL OPERATIONS !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!>

<![MJ] DONE!>
logicalOperation( parenthesis0, logicalOper0, oper, logicalOper1, parenthesis1 ) ::= <<
<parenthesis0> <logicalOper0> <oper> <logicalOper1> <parenthesis1>
>>

<![MJ] DONE!>
logicalOperand(not, oper) ::= <<
<not> <oper>
>>

<![MJ] DONE!>
comparison(operation0, compareOper, operation1) ::= <<
<operation0> <compareOper> <operation1>
>>


typeValue ::= [ "number"  : "int",
	"boolean" : "int", 
	"string"  : "String",
	"void"    : "void", 
	<! | ID         !>                 
	<! | arrayType	!>
	default   : "null" 
]
	
booleanValue ::= [ "false":"0", "true":"1", default:"null" ]






