using "CompleteExample_Types.txt";

fun main {

boolean b1;
b1 = true;
boolean b2 = false;
boolean b3 = b1;
boolean b4 = !b1;
println("print booleans: " + b1 + " " + b2 + " " + b3 + " " + b4);
println("");


string s1 = "s1";
string s2 = "s2";
string s3 = "s3";
println("print strings: " + s1 + " " + s2 + " " + s3);
println("");


number n1 = 1;
number n2 = 2;
number n3 = 3;
println("print numbers: " + n1 + " " + n2 + " " + n3);
println("");


meter m1 = (meter) 1;
doubleMeter dm1 = (meter) 1;	// 0.5 doubleMeter
kilo kg1 = (kilo) 1;


println("print variables: " + m1 + ", " + dm1 + ", " + kg1);
println("");


boolean b5 = n1 < n2;
boolean b6 = m1 > dm1;
boolean b7 = n2 <= n3;
boolean b8 = m1 >= dm1;
boolean b9 = m1 == m1;
boolean b10 = m1 != m1;
println("print assign comparison: "+b5+" "+b6+" "+b7+" "+b8+" "+b9+" "+ b10);
println("");


bar barr = (bar)2;
number n4 = 1+1;					// 2.0
meter m2 = m1 + m1;					// 2m
meter m3 = m1 + (meter) 1;			// 2m
meter m4 = (meter) 1 + (meter) 1;	// 2m
meter m5 = m1 + dm1;				// 1m + 0.5dm -> 1m + 1m -> 2m
meter m6 = dm1 + dm1;				// 0.5dm + 0.5dm -> 1m + 1m -> 2m
distance d1 = (distance) 1;
meter m7 = d1 + m1;					// 1d + 1m -> 1m + 1m -> 2 m
meter m8 = d1 + m1*2;				// 1d + 1m * 2 -> 1m + 2m -> 3m
meter m9 = m1*m1/m1;				// 1m * 1m / 1m -> 1m
meter m10 = m1 + kg1/kg1*m1;		// 1m + 1kg / 1kg * 1m -> 1m + 1 * 1m -> 1m + 1m -> 2m
meter m11 = (m1*kg1 + m1*kg1)/kg1;	// (1m * 1kg + 1m * 1kg) / 1kg -> (1 m kg + 1 m kg) / 1kg -> 2 m kg / 1 kg -> 2m
//meter m12 = m1*kg1/barr;			// 1m * 1kg / 2bar -> 1 m kg / 0.8m -> 1.25kg -> ERRO!!!

print(n4+", "+m2+", "+m3+", "+m4+", ");
print(m5);
print(", "+m6+", "+m7+", "+m8+", "+m9+", "+m10+", "+m11);
println("");

b1 = true;
b2 = false;
b3 = b1;
b4 = !b1;
println("print booleans: " + b1 + " " + b2 + " " + b3 + " " + b4);
println("");

s1 = "s1";
s2 = "s2";
s3 = "s3";
println("print strings: " + s1 + " " + s2 + " " + s3);
println("");

n1 = 1;
n2 = 2;
n3 = 3;
println("print numbers: " + n1 + " " + n2 + " " + n3);
println("");

m1 = (meter) 1;
dm1 = (meter) 1;
kg1 = (kilo) 1;
println("print variables: " + m1 + ", " + dm1 + ", " + kg1);
println("");

b5 = n1 < n2;
b6 = m1 > dm1;
b7 = n2 <= n3;
b8 = m1 >= dm1;
b9 = m1 == m1;
b10 = m1 != m1;
println("print assign comparison: "+b5+" "+b6+" "+b7+" "+b8+" "+b9+" "+ b10);
println("");

n4 = 1+1;
m2 = m1 + m1;
m3 = m1 + (meter) 1;
m4 = (meter) 1 + (meter) 1;
m5 = m1 + dm1;
m6 = dm1 + dm1;
m7 = d1 + m1;
m8 = d1 + m1*2;
m9 = m1*m1/m1;
m10 = m1 + kg1/kg1*m1;
m11 = (m1*kg1 + m1*kg1)/kg1;

print("print assign operations: "+n4+", "+m2+", "+m3+", "+m4+", "+m5+", "+ m6);
println(", "+m7+", "+m8+", "+m9+", "+m10+", "+m11);
println("");

number i = 30;
number n = 0;
boolean bol = false;

for (i = 0; i < 10; i = i+1){
	n = i + 1;
	bol = !bol;
	println("for loop " + n + " of " + "10 " + bol);
}


println("");


n = 0;
bol = false;

while (bol == false) {
	if( n == 9){
		bol = !bol;
	}
	n = n + 1;
	println("while loop " + n + " of " + "10" + bol);
}
println("");
println("");

println("Testing nested if, else if, else and logical operations");
println("");

n = 5;
println("number n = 5;");
if (n == 5 && n > 4){
	
	println("if (n == 5 && n > 4){");
	
	println("");
	println("  entered");
	println("");
	

	if (n < 6 && n > 2 + 2){
		println("  if (n < 6 && n > 2 + 2){");
		println("    entered");
		println("  }");
	}
	
	println("");
	
	if (n > 6 || 2 > 1) {
	
		
		println("  if (n > 6 || 2 > 1) {");
		println("");
		println("    entered");
		println("");
		
		if(n > 5 && false) {
		}
		
		else if (n == 5 || !true){
			println("    if(n > 5 || false) {");
			println("      failed");
			println("    }");
			println("    else if (n == 5 || !true){");
			println("      entered");
			println("    }");
		}
		
		println("");
		
		if ((n==5 && n > 6 || false) && n < 4){
		}
	
		else if (n > 5) {
		}
		
		else {
			println("    if((n==5 && n > 6 || false) && n < 4) {");
			println("      failed");
			println("    }");
			println("    else if ( n > 5){");
			println("      failed");
			println("    }");
			println("    else {");
			println("      entered");
			println("    }");
		}
		println("  }");

	}	
	println("}");

}
println("");
println("");

area a1 = (area) 0;
volume v1 = (volume) 0;

m1 = (meter) 1;
a1 = m1^2;
v1 = (m1+m1)^3;
m3 = m2 % 2;
m4 = (meter) 9 % 3;
println("print mod and power: "+m1+", "+a1+", "+v1+", "+m3+", "+m4);
println("");

}
